pub fn path_trace(world: &mut World) {
    let mut query = world.query_mut::<(&mut PathTracerComponent, &CameraComponent)>();

    for (_entity, (path_tracer, camera)) in query.iter_mut() {
        let width = path_tracer.width;
        let height = path_tracer.height;

        for y in 0..height {
            for x in 0..width {
                let pixel_idx = (y * width + x) * 3;

                //TO-DO: implement path tracing logic
                let color = [1.0, 0.0, 0.0];

                path_tracer.accumulated_colors[pixel_idx] += color;
                path_tracer.accumulated_colors[pixel_idx + 1] += color;
                path_tracer.accumulated_colors[pixel_idx + 2] += color;
            }
        }
    }
}
